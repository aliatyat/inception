# Overview: How the Stack Works

This document explains the key components of a typical modern web stack for running a WordPress website, using MariaDB, WordPress, and Nginx. Each part is explained simply, with analogies and a summary table.

---

## 1. MariaDB: The Database

**What it is:**  
MariaDB is a relational database management system (RDBMS). It's a forked, community-developed, and fully compatible drop-in replacement for MySQL.  
Think of it as a highly organized, digital filing cabinet.

- **Stores:** User information, blog posts, comments, product listings, plugin settings, and almost every piece of dynamic content on a site.
- **Function:** Uses the SQL language to create, read, update, and delete data (CRUD operations) in structured tables, rows, and columns.

**Why we need it:**  
A database powers any dynamic website (where content changes regularly). Without it, you’d have to manually update every page in HTML for each new post or product.

**Analogy:**  
The Filing Cabinet & Librarian. All content is stored here, and it's efficient at finding and retrieving exactly what you ask for.

---

## 2. WordPress: The Web Application / Content Management System (CMS)

**What it is:**  
WordPress is a free and open-source Content Management System (CMS) built primarily in PHP. It lets you build and manage your website without writing code.

- **Front-end:** What your visitors see (the design, pages, blog).
- **Back-end (/wp-admin):** The dashboard where you (the admin) log in to write posts, upload images, change the site’s appearance, and add plugins.

**Why we need it:**  
WordPress provides a user-friendly interface and logic that:
- Fetches content from the database (MariaDB).
- Assembles that content into a web page using PHP code and your theme.
- Presents the final HTML page to the user's web browser.

It turns raw data from the database into a beautiful, functional website.

**Analogy:**  
The Office Worker/Content Creator. This person takes information from the filing cabinet (MariaDB), organizes it (using themes), and prepares it to send to visitors.

---

## 3. Nginx: The Web Server

**What it is:**  
Nginx (pronounced "Engine-X") is a high-performance web server and reverse proxy. Its primary job is to serve content to visitors.

- **Web Server:** When someone visits your website, Nginx receives the request and delivers the requested files (HTML, images, etc.).
- **Handles PHP:** For WordPress sites, Nginx passes PHP requests to a separate processor (like PHP-FPM) and returns the result to the user.

**Why we need it:**  
Nginx is the gatekeeper and delivery person for the website. It’s:
- **Very Fast & Efficient:** Handles high traffic with many simultaneous connections.
- **Stable:** Uses little memory even under load.
- **Versatile:** Can also function as a load balancer and cache static content for faster sites.

**Analogy:**  
The Receptionist and Mail Courier. The receptionist (Nginx) accepts requests, decides which department (PHP processor, static file) should handle it, and the courier delivers the results.

---

## How They Work Together: The Perfect Symphony

When you visit a WordPress site, this happens:

1. **Your browser sends a request:** "Show me the homepage!"
2. **Nginx (Web Server):** Receives the request and sees it’s a dynamic PHP page.
3. **Nginx passes the request to PHP-FPM (PHP Processor):** To execute the code.
4. **WordPress (PHP code) runs:** Decides what content is needed (e.g., latest posts).
5. **WordPress queries MariaDB:** Gets the required data from the database.
6. **MariaDB responds:** Sends the requested data back to WordPress.
7. **WordPress assembles the page:** Combines data with the theme to create the HTML page.
8. **WordPress hands the HTML to PHP-FPM, which gives it to Nginx.**
9. **Nginx delivers the HTML page to your browser.**
10. **You see the page!**  
All this happens in milliseconds.

---

## Summary Table

| Component | Role & Purpose                                  | Real-World Analogy           |
|-----------|------------------------------------------------|------------------------------|
| MariaDB   | Database: Stores all dynamic content and data.  | The Filing Cabinet           |
| WordPress | CMS/Application: Creates and manages website.   | The Office Worker            |
| Nginx     | Web Server: Serves the website to visitors.     | The Receptionist & Courier   |

---

## Why This Combination is So Popular

- **Performance:** Nginx is extremely fast and efficient.
- **Cost:** All three are free and open-source.
- **Flexibility:** WordPress has a huge ecosystem of themes and plugins.
- **Reliability:** MariaDB is robust and enterprise-grade.
- **Scalability:** This stack can power anything from small blogs to massive, high-traffic sites.

services:
  mariadb:
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - inception
    restart: unless-stopped

  wordpress:
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    container_name: wordpress
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      DOMAIN_NAME: ${DOMAIN_NAME}
      WP_TITLE: ${WP_TITLE}
      WP_ADMIN_USR: ${WP_ADMIN_USR}
      WP_ADMIN_PWD: ${WP_ADMIN_PWD}
      WP_ADMIN_EMAIL: ${WP_ADMIN_EMAIL}
      WP_USR: ${WP_USR}
      WP_EMAIL: ${WP_EMAIL}
      WP_PWD: ${WP_PWD}
    volumes:
      - wordpress_data:/var/www/wordpress
      - php_socket:/run/php
    networks:
      - inception
    depends_on:
      - mariadb
    restart: unless-stopped

  nginx:
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "8443:443"
      - "8080:80"
    volumes:
      - wordpress_data:/var/www/wordpress
      - php_socket:/run/php
    networks:
      - inception
    depends_on:
      - wordpress
    restart: unless-stopped

volumes:
  mariadb_data:
    driver: local
  wordpress_data:
    driver: local
  php_socket:
    driver: local

networks:
  inception:
    driver: bridge